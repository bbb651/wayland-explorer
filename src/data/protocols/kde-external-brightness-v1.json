{
  "type": "protocol",
  "name": "kde_external_brightness_v1",
  "copyright": {
    "type": "copyright",
    "text": "\nSPDX-FileCopyrightText: 2024 Xaver Hugl <xaver.hugl@gmail.com>\n\nSPDX-License-Identifier: MIT-CMU\n"
  },
  "interfaces": [
    {
      "type": "interface",
      "name": "kde_external_brightness_v1",
      "version": "1",
      "description": {
        "type": "description",
        "text": "Some brightness control mechanisms are somewhat unstable, or require root\nprivileges, so putting them inside of the compositor is not desired.\nThis protocol is for outsourcing the actual brightness-setting to a\nprocess outside of the compositor.",
        "summary": "external brightness control"
      },
      "requests": [
        {
          "type": "request",
          "name": "destroy",
          "requestType": "destructor",
          "description": {
            "type": "description",
            "summary": "Destroy the object."
          },
          "args": []
        },
        {
          "type": "request",
          "name": "create_brightness_control",
          "description": {
            "type": "description",
            "summary": "registers a brightness device with the compositor"
          },
          "args": [
            {
              "type": "arg",
              "name": "id",
              "argType": "new_id",
              "interface": "kde_external_brightness_device_v1"
            }
          ]
        }
      ],
      "events": [],
      "enums": []
    },
    {
      "type": "interface",
      "name": "kde_external_brightness_device_v1",
      "version": "1",
      "description": {
        "type": "description",
        "text": "After creating this object, the client should issue all relevant setup requests\n(set_internal, set_edid, set_max_brightness) and finish the sequence with commit.\nAfterwards, for each change in values, the client must call commit again.",
        "summary": "brightness control device"
      },
      "requests": [
        {
          "type": "request",
          "name": "destroy",
          "requestType": "destructor",
          "description": {
            "type": "description",
            "summary": "destroy the object and unregister the brightness control device"
          },
          "args": []
        },
        {
          "type": "request",
          "name": "set_internal",
          "description": {
            "type": "description",
            "summary": "sets whether or not the brightness device belongs to an internal display"
          },
          "args": [
            {
              "type": "arg",
              "name": "internal",
              "argType": "uint",
              "summary": "1 if it's an internal panel, 0 if not"
            }
          ]
        },
        {
          "type": "request",
          "name": "set_edid",
          "description": {
            "type": "description",
            "summary": "set the EDID data for identification of the display"
          },
          "args": [
            {
              "type": "arg",
              "name": "string",
              "argType": "string",
              "summary": "base-64 encoded string of the first 128 bytes of the EDID"
            }
          ]
        },
        {
          "type": "request",
          "name": "set_max_brightness",
          "description": {
            "type": "description",
            "summary": "notifies the compositor of the maximum brightness that can be set on this device"
          },
          "args": [
            {
              "type": "arg",
              "name": "value",
              "argType": "uint",
              "summary": "the maximum value that can be set"
            }
          ]
        },
        {
          "type": "request",
          "name": "commit",
          "description": {
            "type": "description",
            "summary": "notifies the compositor that all relevant identifiers and values have been sent"
          },
          "args": []
        }
      ],
      "events": [
        {
          "type": "event",
          "name": "requested_brightness",
          "description": {
            "type": "description",
            "text": "The client must ensure that if the brightness level changes due to external factors,\nthat it overwrites those changes with what the compositor last requested.",
            "summary": "requests the client to change the brightness to this value"
          },
          "args": [
            {
              "type": "arg",
              "name": "value",
              "argType": "uint",
              "summary": "the value to set the device to"
            }
          ]
        }
      ],
      "enums": []
    }
  ]
}
