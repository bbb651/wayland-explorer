{
  "type": "protocol",
  "name": "xwayland_shell_v1",
  "copyright": {
    "type": "copyright",
    "text": "Copyright Â© 2022 Joshua Ashton\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the \"Software\"),\nto deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice (including the next\nparagraph) shall be included in all copies or substantial portions of the\nSoftware.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\nTHE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE."
  },
  "description": {
    "type": "description",
    "text": "This protocol adds a xwayland_surface role which allows an Xwayland\nserver to associate an X11 window to a wl_surface.\n\nBefore this protocol, this would be done via the Xwayland server\nproviding the wl_surface's resource id via the a client message with\nthe WL_SURFACE_ID atom on the X window.\nThis was problematic as a race could occur if the wl_surface\nassociated with a WL_SURFACE_ID for a window was destroyed before the\nclient message was processed by the compositor and another surface\n(or other object) had taken its id due to recycling.\n\nThis protocol solves the problem by moving the X11 window to wl_surface\nassociation step to the Wayland side, which means that the association\ncannot happen out-of-sync with the resource lifetime of the wl_surface.\n\nThis protocol avoids duplicating the race on the other side by adding a\nnon-zero monotonic serial number which is entirely unique that is set on\nboth the wl_surface (via. xwayland_surface_v1's set_serial method) and\nthe X11 window (via. the `WL_SURFACE_SERIAL` client message) that can be\nused to associate them, and synchronize the two timelines.\n\nThe key words \"must\", \"must not\", \"required\", \"shall\", \"shall not\",\n\"should\", \"should not\", \"recommended\",  \"may\", and \"optional\" in this\ndocument are to be interpreted as described in IETF RFC 2119.\n\nWarning! The protocol described in this file is currently in the testing\nphase. Backward compatible changes may be added together with the\ncorresponding interface version bump. Backward incompatible changes can\nonly be done by creating a new major version of the extension.",
    "summary": "Protocol for associating X11 windows to wl_surfaces"
  },
  "interfaces": [
    {
      "type": "interface",
      "name": "xwayland_shell_v1",
      "version": "1",
      "description": {
        "type": "description",
        "text": "xwayland_shell_v1 is a singleton global object that\nprovides the ability to create a xwayland_surface_v1 object\nfor a given wl_surface.\n\nThis interface is intended to be bound by the Xwayland server.\n\nA compositor must not allow clients other than Xwayland to\nbind to this interface. A compositor should hide this global\nfrom other clients' wl_registry.\nA client the compositor does not consider to be an Xwayland\nserver attempting to bind this interface will result in\nan implementation-defined error.\n\nAn Xwayland server that has bound this interface must not\nset the `WL_SURFACE_ID` atom on a window.",
        "summary": "context object for Xwayland shell"
      },
      "requests": [
        {
          "type": "request",
          "name": "destroy",
          "requestType": "destructor",
          "description": {
            "type": "description",
            "text": "Destroy the xwayland_shell_v1 object.\n\nThe child objects created via this interface are unaffected.",
            "summary": "destroy the Xwayland shell object"
          },
          "args": []
        },
        {
          "type": "request",
          "name": "get_xwayland_surface",
          "description": {
            "type": "description",
            "text": "Create an xwayland_surface_v1 interface for a given wl_surface\nobject and gives it the xwayland_surface role.\n\nIt is illegal to create an xwayland_surface_v1 for a wl_surface\nwhich already has an assigned role and this will result in the\n`role` protocol error.\n\nSee the documentation of xwayland_surface_v1 for more details\nabout what an xwayland_surface_v1 is and how it is used.",
            "summary": "assign the xwayland_surface surface role"
          },
          "args": [
            {
              "type": "arg",
              "name": "id",
              "argType": "new_id",
              "interface": "xwayland_surface_v1"
            },
            {
              "type": "arg",
              "name": "surface",
              "argType": "object",
              "interface": "wl_surface",
              "protocol": "wayland"
            }
          ]
        }
      ],
      "events": [],
      "enums": [
        {
          "type": "enum",
          "name": "error",
          "bitfield": false,
          "entries": [
            {
              "type": "entry",
              "name": "role",
              "value": "0",
              "summary": "given wl_surface has another role"
            }
          ]
        }
      ]
    },
    {
      "type": "interface",
      "name": "xwayland_surface_v1",
      "version": "1",
      "description": {
        "type": "description",
        "text": "An Xwayland surface is a surface managed by an Xwayland server.\nIt is used for associating surfaces to Xwayland windows.\n\nThe Xwayland server associated with actions in this interface is\ndetermined by the Wayland client making the request.\n\nThe client must call wl_surface.commit on the corresponding wl_surface\nfor the xwayland_surface_v1 state to take effect.",
        "summary": "interface for associating Xwayland windows to wl_surfaces"
      },
      "requests": [
        {
          "type": "request",
          "name": "set_serial",
          "description": {
            "type": "description",
            "text": "Associates an Xwayland window to a wl_surface.\nThe association state is double-buffered, see wl_surface.commit.\n\nThe `serial_lo` and `serial_hi` parameters specify a non-zero\nmonotonic serial number which is entirely unique and provided by the\nXwayland server equal to the serial value provided by a client message\nwith a message type of the `WL_SURFACE_SERIAL` atom on the X11 window\nfor this surface to be associated to.\n\nThe serial value in the `WL_SURFACE_SERIAL` client message is specified\nas having the lo-bits specified in `l[0]` and the hi-bits specified\nin `l[1]`.\n\nIf the serial value provided by `serial_lo` and `serial_hi` is not\nvalid, the `invalid_serial` protocol error will be raised.\n\nAn X11 window may be associated with multiple surfaces throughout its\nlifespan. (eg. unmapping and remapping a window).\n\nFor each wl_surface, this state must not be committed more than once,\notherwise the `already_associated` protocol error will be raised.",
            "summary": "associates a Xwayland window to a wl_surface"
          },
          "args": [
            {
              "type": "arg",
              "name": "serial_lo",
              "argType": "uint",
              "summary": "The lower 32-bits of the serial number associated with the X11 window"
            },
            {
              "type": "arg",
              "name": "serial_hi",
              "argType": "uint",
              "summary": "The upper 32-bits of the serial number associated with the X11 window"
            }
          ]
        },
        {
          "type": "request",
          "name": "destroy",
          "requestType": "destructor",
          "description": {
            "type": "description",
            "text": "Destroy the xwayland_surface_v1 object.\n\nAny already existing associations are unaffected by this action.",
            "summary": "destroy the Xwayland surface object"
          },
          "args": []
        }
      ],
      "events": [],
      "enums": [
        {
          "type": "enum",
          "name": "error",
          "bitfield": false,
          "entries": [
            {
              "type": "entry",
              "name": "already_associated",
              "value": "0",
              "summary": "given wl_surface is already associated with an X11 window"
            },
            {
              "type": "entry",
              "name": "invalid_serial",
              "value": "1",
              "summary": "serial was not valid"
            }
          ]
        }
      ]
    }
  ]
}
