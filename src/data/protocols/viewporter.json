{
  "type": "protocol",
  "name": "viewporter",
  "copyright": {
    "type": "copyright",
    "text": "Copyright Â© 2013-2016 Collabora, Ltd.\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the \"Software\"),\nto deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice (including the next\nparagraph) shall be included in all copies or substantial portions of the\nSoftware.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\nTHE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE."
  },
  "interfaces": [
    {
      "type": "interface",
      "name": "wp_viewporter",
      "version": "1",
      "description": {
        "type": "description",
        "text": "The global interface exposing surface cropping and scaling\ncapabilities is used to instantiate an interface extension for a\nwl_surface object. This extended interface will then allow\ncropping and scaling the surface contents, effectively\ndisconnecting the direct relationship between the buffer and the\nsurface size.",
        "summary": "surface cropping and scaling"
      },
      "requests": [
        {
          "type": "request",
          "name": "destroy",
          "requestType": "destructor",
          "description": {
            "type": "description",
            "text": "Informs the server that the client will not be using this\nprotocol object anymore. This does not affect any other objects,\nwp_viewport objects included.",
            "summary": "unbind from the cropping and scaling interface"
          },
          "args": []
        },
        {
          "type": "request",
          "name": "get_viewport",
          "description": {
            "type": "description",
            "text": "Instantiate an interface extension for the given wl_surface to\ncrop and scale its content. If the given wl_surface already has\na wp_viewport object associated, the viewport_exists\nprotocol error is raised.",
            "summary": "extend surface interface for crop and scale"
          },
          "args": [
            {
              "type": "arg",
              "name": "id",
              "argType": "new_id",
              "summary": "the new viewport interface id",
              "interface": "wp_viewport"
            },
            {
              "type": "arg",
              "name": "surface",
              "argType": "object",
              "summary": "the surface",
              "interface": "wl_surface",
              "protocol": "wayland"
            }
          ]
        }
      ],
      "events": [],
      "enums": [
        {
          "type": "enum",
          "name": "error",
          "bitfield": false,
          "entries": [
            {
              "type": "entry",
              "name": "viewport_exists",
              "value": "0",
              "summary": "the surface already has a viewport object associated"
            }
          ]
        }
      ]
    },
    {
      "type": "interface",
      "name": "wp_viewport",
      "version": "1",
      "description": {
        "type": "description",
        "text": "An additional interface to a wl_surface object, which allows the\nclient to specify the cropping and scaling of the surface\ncontents.\n\nThis interface works with two concepts: the source rectangle (src_x,\nsrc_y, src_width, src_height), and the destination size (dst_width,\ndst_height). The contents of the source rectangle are scaled to the\ndestination size, and content outside the source rectangle is ignored.\nThis state is double-buffered, see wl_surface.commit.\n\nThe two parts of crop and scale state are independent: the source\nrectangle, and the destination size. Initially both are unset, that\nis, no scaling is applied. The whole of the current wl_buffer is\nused as the source, and the surface size is as defined in\nwl_surface.attach.\n\nIf the destination size is set, it causes the surface size to become\ndst_width, dst_height. The source (rectangle) is scaled to exactly\nthis size. This overrides whatever the attached wl_buffer size is,\nunless the wl_buffer is NULL. If the wl_buffer is NULL, the surface\nhas no content and therefore no size. Otherwise, the size is always\nat least 1x1 in surface local coordinates.\n\nIf the source rectangle is set, it defines what area of the wl_buffer is\ntaken as the source. If the source rectangle is set and the destination\nsize is not set, then src_width and src_height must be integers, and the\nsurface size becomes the source rectangle size. This results in cropping\nwithout scaling. If src_width or src_height are not integers and\ndestination size is not set, the bad_size protocol error is raised when\nthe surface state is applied.\n\nThe coordinate transformations from buffer pixel coordinates up to\nthe surface-local coordinates happen in the following order:\n1. buffer_transform (wl_surface.set_buffer_transform)\n2. buffer_scale (wl_surface.set_buffer_scale)\n3. crop and scale (wp_viewport.set*)\nThis means, that the source rectangle coordinates of crop and scale\nare given in the coordinates after the buffer transform and scale,\ni.e. in the coordinates that would be the surface-local coordinates\nif the crop and scale was not applied.\n\nIf src_x or src_y are negative, the bad_value protocol error is raised.\nOtherwise, if the source rectangle is partially or completely outside of\nthe non-NULL wl_buffer, then the out_of_buffer protocol error is raised\nwhen the surface state is applied. A NULL wl_buffer does not raise the\nout_of_buffer error.\n\nIf the wl_surface associated with the wp_viewport is destroyed,\nall wp_viewport requests except 'destroy' raise the protocol error\nno_surface.\n\nIf the wp_viewport object is destroyed, the crop and scale\nstate is removed from the wl_surface. The change will be applied\non the next wl_surface.commit.",
        "summary": "crop and scale interface to a wl_surface"
      },
      "requests": [
        {
          "type": "request",
          "name": "destroy",
          "requestType": "destructor",
          "description": {
            "type": "description",
            "text": "The associated wl_surface's crop and scale state is removed.\nThe change is applied on the next wl_surface.commit.",
            "summary": "remove scaling and cropping from the surface"
          },
          "args": []
        },
        {
          "type": "request",
          "name": "set_source",
          "description": {
            "type": "description",
            "text": "Set the source rectangle of the associated wl_surface. See\nwp_viewport for the description, and relation to the wl_buffer\nsize.\n\nIf all of x, y, width and height are -1.0, the source rectangle is\nunset instead. Any other set of values where width or height are zero\nor negative, or x or y are negative, raise the bad_value protocol\nerror.\n\nThe crop and scale state is double-buffered, see wl_surface.commit.",
            "summary": "set the source rectangle for cropping"
          },
          "args": [
            {
              "type": "arg",
              "name": "x",
              "argType": "fixed",
              "summary": "source rectangle x"
            },
            {
              "type": "arg",
              "name": "y",
              "argType": "fixed",
              "summary": "source rectangle y"
            },
            {
              "type": "arg",
              "name": "width",
              "argType": "fixed",
              "summary": "source rectangle width"
            },
            {
              "type": "arg",
              "name": "height",
              "argType": "fixed",
              "summary": "source rectangle height"
            }
          ]
        },
        {
          "type": "request",
          "name": "set_destination",
          "description": {
            "type": "description",
            "text": "Set the destination size of the associated wl_surface. See\nwp_viewport for the description, and relation to the wl_buffer\nsize.\n\nIf width is -1 and height is -1, the destination size is unset\ninstead. Any other pair of values for width and height that\ncontains zero or negative values raises the bad_value protocol\nerror.\n\nThe crop and scale state is double-buffered, see wl_surface.commit.",
            "summary": "set the surface size for scaling"
          },
          "args": [
            {
              "type": "arg",
              "name": "width",
              "argType": "int",
              "summary": "surface width"
            },
            {
              "type": "arg",
              "name": "height",
              "argType": "int",
              "summary": "surface height"
            }
          ]
        }
      ],
      "events": [],
      "enums": [
        {
          "type": "enum",
          "name": "error",
          "bitfield": false,
          "entries": [
            {
              "type": "entry",
              "name": "bad_value",
              "value": "0",
              "summary": "negative or zero values in width or height"
            },
            {
              "type": "entry",
              "name": "bad_size",
              "value": "1",
              "summary": "destination size is not integer"
            },
            {
              "type": "entry",
              "name": "out_of_buffer",
              "value": "2",
              "summary": "source rectangle extends outside of the content area"
            },
            {
              "type": "entry",
              "name": "no_surface",
              "value": "3",
              "summary": "the wl_surface was destroyed"
            }
          ]
        }
      ]
    }
  ]
}
