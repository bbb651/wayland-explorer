{
  "type": "protocol",
  "name": "cursor_shape_v1",
  "copyright": {
    "type": "copyright",
    "text": "Copyright 2018 The Chromium Authors\nCopyright 2023 Simon Ser\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the \"Software\"),\nto deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice (including the next\nparagraph) shall be included in all copies or substantial portions of the\nSoftware.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\nTHE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE."
  },
  "interfaces": [
    {
      "type": "interface",
      "name": "wp_cursor_shape_manager_v1",
      "version": "1",
      "description": {
        "type": "description",
        "text": "This global offers an alternative, optional way to set cursor images. This\nnew way uses enumerated cursors instead of a wl_surface like\nwl_pointer.set_cursor does.\n\nWarning! The protocol described in this file is currently in the testing\nphase. Backward compatible changes may be added together with the\ncorresponding interface version bump. Backward incompatible changes can\nonly be done by creating a new major version of the extension.",
        "summary": "cursor shape manager"
      },
      "requests": [
        {
          "type": "request",
          "name": "destroy",
          "requestType": "destructor",
          "description": {
            "type": "description",
            "text": "Destroy the cursor shape manager.",
            "summary": "destroy the manager"
          },
          "args": []
        },
        {
          "type": "request",
          "name": "get_pointer",
          "description": {
            "type": "description",
            "text": "Obtain a wp_cursor_shape_device_v1 for a wl_pointer object.",
            "summary": "manage the cursor shape of a pointer device"
          },
          "args": [
            {
              "type": "arg",
              "name": "cursor_shape_device",
              "argType": "new_id",
              "interface": "wp_cursor_shape_device_v1"
            },
            {
              "type": "arg",
              "name": "pointer",
              "argType": "object",
              "interface": "wl_pointer",
              "protocol": "wayland"
            }
          ]
        },
        {
          "type": "request",
          "name": "get_tablet_tool_v2",
          "description": {
            "type": "description",
            "text": "Obtain a wp_cursor_shape_device_v1 for a zwp_tablet_tool_v2 object.",
            "summary": "manage the cursor shape of a tablet tool device"
          },
          "args": [
            {
              "type": "arg",
              "name": "cursor_shape_device",
              "argType": "new_id",
              "interface": "wp_cursor_shape_device_v1"
            },
            {
              "type": "arg",
              "name": "tablet_tool",
              "argType": "object",
              "interface": "zwp_tablet_tool_v2",
              "protocol": "tablet-v2"
            }
          ]
        }
      ],
      "events": [],
      "enums": []
    },
    {
      "type": "interface",
      "name": "wp_cursor_shape_device_v1",
      "version": "1",
      "description": {
        "type": "description",
        "text": "This interface allows clients to set the cursor shape.",
        "summary": "cursor shape for a device"
      },
      "requests": [
        {
          "type": "request",
          "name": "destroy",
          "requestType": "destructor",
          "description": {
            "type": "description",
            "text": "Destroy the cursor shape device.\n\nThe device cursor shape remains unchanged.",
            "summary": "destroy the cursor shape device"
          },
          "args": []
        },
        {
          "type": "request",
          "name": "set_shape",
          "description": {
            "type": "description",
            "text": "Sets the device cursor to the specified shape. The compositor will\nchange the cursor image based on the specified shape.\n\nThe cursor actually changes only if the input device focus is one of\nthe requesting client's surfaces. If any, the previous cursor image\n(surface or shape) is replaced.\n\nThe \"shape\" argument must be a valid enum entry, otherwise the\ninvalid_shape protocol error is raised.\n\nThis is similar to the wl_pointer.set_cursor and\nzwp_tablet_tool_v2.set_cursor requests, but this request accepts a\nshape instead of contents in the form of a surface. Clients can mix\nset_cursor and set_shape requests.\n\nThe serial parameter must match the latest wl_pointer.enter or\nzwp_tablet_tool_v2.proximity_in serial number sent to the client.\nOtherwise the request will be ignored.",
            "summary": "set device cursor to the shape"
          },
          "args": [
            {
              "type": "arg",
              "name": "serial",
              "argType": "uint",
              "summary": "serial number of the enter event"
            },
            {
              "type": "arg",
              "name": "shape",
              "argType": "uint",
              "enum": "shape"
            }
          ]
        }
      ],
      "events": [],
      "enums": [
        {
          "type": "enum",
          "name": "shape",
          "bitfield": false,
          "description": {
            "type": "description",
            "text": "This enum describes cursor shapes.\n\nThe names are taken from the CSS W3C specification:\nhttps://w3c.github.io/csswg-drafts/css-ui/#cursor",
            "summary": "cursor shapes"
          },
          "entries": [
            {
              "type": "entry",
              "name": "default",
              "value": "1",
              "summary": "default cursor"
            },
            {
              "type": "entry",
              "name": "context_menu",
              "value": "2",
              "summary": "a context menu is available for the object under the cursor"
            },
            {
              "type": "entry",
              "name": "help",
              "value": "3",
              "summary": "help is available for the object under the cursor"
            },
            {
              "type": "entry",
              "name": "pointer",
              "value": "4",
              "summary": "pointer that indicates a link or another interactive element"
            },
            {
              "type": "entry",
              "name": "progress",
              "value": "5",
              "summary": "progress indicator"
            },
            {
              "type": "entry",
              "name": "wait",
              "value": "6",
              "summary": "program is busy, user should wait"
            },
            {
              "type": "entry",
              "name": "cell",
              "value": "7",
              "summary": "a cell or set of cells may be selected"
            },
            {
              "type": "entry",
              "name": "crosshair",
              "value": "8",
              "summary": "simple crosshair"
            },
            {
              "type": "entry",
              "name": "text",
              "value": "9",
              "summary": "text may be selected"
            },
            {
              "type": "entry",
              "name": "vertical_text",
              "value": "10",
              "summary": "vertical text may be selected"
            },
            {
              "type": "entry",
              "name": "alias",
              "value": "11",
              "summary": "drag-and-drop: alias of/shortcut to something is to be created"
            },
            {
              "type": "entry",
              "name": "copy",
              "value": "12",
              "summary": "drag-and-drop: something is to be copied"
            },
            {
              "type": "entry",
              "name": "move",
              "value": "13",
              "summary": "drag-and-drop: something is to be moved"
            },
            {
              "type": "entry",
              "name": "no_drop",
              "value": "14",
              "summary": "drag-and-drop: the dragged item cannot be dropped at the current cursor location"
            },
            {
              "type": "entry",
              "name": "not_allowed",
              "value": "15",
              "summary": "drag-and-drop: the requested action will not be carried out"
            },
            {
              "type": "entry",
              "name": "grab",
              "value": "16",
              "summary": "drag-and-drop: something can be grabbed"
            },
            {
              "type": "entry",
              "name": "grabbing",
              "value": "17",
              "summary": "drag-and-drop: something is being grabbed"
            },
            {
              "type": "entry",
              "name": "e_resize",
              "value": "18",
              "summary": "resizing: the east border is to be moved"
            },
            {
              "type": "entry",
              "name": "n_resize",
              "value": "19",
              "summary": "resizing: the north border is to be moved"
            },
            {
              "type": "entry",
              "name": "ne_resize",
              "value": "20",
              "summary": "resizing: the north-east corner is to be moved"
            },
            {
              "type": "entry",
              "name": "nw_resize",
              "value": "21",
              "summary": "resizing: the north-west corner is to be moved"
            },
            {
              "type": "entry",
              "name": "s_resize",
              "value": "22",
              "summary": "resizing: the south border is to be moved"
            },
            {
              "type": "entry",
              "name": "se_resize",
              "value": "23",
              "summary": "resizing: the south-east corner is to be moved"
            },
            {
              "type": "entry",
              "name": "sw_resize",
              "value": "24",
              "summary": "resizing: the south-west corner is to be moved"
            },
            {
              "type": "entry",
              "name": "w_resize",
              "value": "25",
              "summary": "resizing: the west border is to be moved"
            },
            {
              "type": "entry",
              "name": "ew_resize",
              "value": "26",
              "summary": "resizing: the east and west borders are to be moved"
            },
            {
              "type": "entry",
              "name": "ns_resize",
              "value": "27",
              "summary": "resizing: the north and south borders are to be moved"
            },
            {
              "type": "entry",
              "name": "nesw_resize",
              "value": "28",
              "summary": "resizing: the north-east and south-west corners are to be moved"
            },
            {
              "type": "entry",
              "name": "nwse_resize",
              "value": "29",
              "summary": "resizing: the north-west and south-east corners are to be moved"
            },
            {
              "type": "entry",
              "name": "col_resize",
              "value": "30",
              "summary": "resizing: that the item/column can be resized horizontally"
            },
            {
              "type": "entry",
              "name": "row_resize",
              "value": "31",
              "summary": "resizing: that the item/row can be resized vertically"
            },
            {
              "type": "entry",
              "name": "all_scroll",
              "value": "32",
              "summary": "something can be scrolled in any direction"
            },
            {
              "type": "entry",
              "name": "zoom_in",
              "value": "33",
              "summary": "something can be zoomed in"
            },
            {
              "type": "entry",
              "name": "zoom_out",
              "value": "34",
              "summary": "something can be zoomed out"
            }
          ]
        },
        {
          "type": "enum",
          "name": "error",
          "bitfield": false,
          "entries": [
            {
              "type": "entry",
              "name": "invalid_shape",
              "value": "1",
              "summary": "the specified shape value is invalid"
            }
          ]
        }
      ]
    }
  ]
}
