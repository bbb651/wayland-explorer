{
  "type": "protocol",
  "name": "xdg_dialog_v1",
  "copyright": {
    "type": "copyright",
    "text": "Copyright Â© 2023 Carlos Garnacho\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the \"Software\"),\nto deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice (including the next\nparagraph) shall be included in all copies or substantial portions of the\nSoftware.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\nTHE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE."
  },
  "interfaces": [
    {
      "type": "interface",
      "name": "xdg_wm_dialog_v1",
      "version": "1",
      "description": {
        "type": "description",
        "text": "The xdg_wm_dialog_v1 interface is exposed as a global object allowing\nto register surfaces with a xdg_toplevel role as \"dialogs\" relative to\nanother toplevel.\n\nThe compositor may let this relation influence how the surface is\nplaced, displayed or interacted with.\n\nWarning! The protocol described in this file is currently in the testing\nphase. Backward compatible changes may be added together with the\ncorresponding interface version bump. Backward incompatible changes can\nonly be done by creating a new major version of the extension.",
        "summary": "create dialogs related to other toplevels"
      },
      "requests": [
        {
          "type": "request",
          "name": "destroy",
          "requestType": "destructor",
          "description": {
            "type": "description",
            "text": "Destroys the xdg_wm_dialog_v1 object. This does not affect\nthe xdg_dialog_v1 objects generated through it.",
            "summary": "destroy the dialog manager object"
          },
          "args": []
        },
        {
          "type": "request",
          "name": "get_xdg_dialog",
          "description": {
            "type": "description",
            "text": "Creates a xdg_dialog_v1 object for the given toplevel. See the interface\ndescription for more details.\n\nCompositors must raise an already_used error if clients attempt to\ncreate multiple xdg_dialog_v1 objects for the same xdg_toplevel.",
            "summary": "create a dialog object"
          },
          "args": [
            {
              "type": "arg",
              "name": "id",
              "argType": "new_id",
              "interface": "xdg_dialog_v1"
            },
            {
              "type": "arg",
              "name": "toplevel",
              "argType": "object",
              "interface": "xdg_toplevel",
              "protocol": "xdg-shell"
            }
          ]
        }
      ],
      "events": [],
      "enums": [
        {
          "type": "enum",
          "name": "error",
          "bitfield": false,
          "entries": [
            {
              "type": "entry",
              "name": "already_used",
              "value": "0",
              "summary": "the xdg_toplevel object has already been used to create a xdg_dialog_v1"
            }
          ]
        }
      ]
    },
    {
      "type": "interface",
      "name": "xdg_dialog_v1",
      "version": "1",
      "description": {
        "type": "description",
        "text": "A xdg_dialog_v1 object is an ancillary object tied to a xdg_toplevel. Its\npurpose is hinting the compositor that the toplevel is a \"dialog\" (e.g. a\ntemporary window) relative to another toplevel (see\nxdg_toplevel.set_parent). If the xdg_toplevel is destroyed, the xdg_dialog_v1\nbecomes inert.\n\nThrough this object, the client may provide additional hints about\nthe purpose of the secondary toplevel. This interface has no effect\non toplevels that are not attached to a parent toplevel.",
        "summary": "dialog object"
      },
      "requests": [
        {
          "type": "request",
          "name": "destroy",
          "requestType": "destructor",
          "description": {
            "type": "description",
            "text": "Destroys the xdg_dialog_v1 object. If this object is destroyed\nbefore the related xdg_toplevel, the compositor should unapply its\neffects.",
            "summary": "destroy the dialog object"
          },
          "args": []
        },
        {
          "type": "request",
          "name": "set_modal",
          "description": {
            "type": "description",
            "text": "Hints that the dialog has \"modal\" behavior. Modal dialogs typically\nrequire to be fully addressed by the user (i.e. closed) before resuming\ninteraction with the parent toplevel, and may require a distinct\npresentation.\n\nClients must implement the logic to filter events in the parent\ntoplevel on their own.\n\nCompositors may choose any policy in event delivery to the parent\ntoplevel, from delivering all events unfiltered to using them for\ninternal consumption.",
            "summary": "mark dialog as modal"
          },
          "args": []
        },
        {
          "type": "request",
          "name": "unset_modal",
          "description": {
            "type": "description",
            "text": "Drops the hint that this dialog has \"modal\" behavior. See\nxdg_dialog_v1.set_modal for more details.",
            "summary": "mark dialog as not modal"
          },
          "args": []
        }
      ],
      "events": [],
      "enums": []
    }
  ]
}
