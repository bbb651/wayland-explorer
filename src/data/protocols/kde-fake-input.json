{
  "type": "protocol",
  "name": "fake_input",
  "copyright": {
    "type": "copyright",
    "text": "\nSPDX-FileCopyrightText: 2015 Martin Gräßlin\n\nSPDX-License-Identifier: LGPL-2.1-or-later\n"
  },
  "interfaces": [
    {
      "type": "interface",
      "name": "org_kde_kwin_fake_input",
      "version": "5",
      "description": {
        "type": "description",
        "text": "This interface allows other processes to provide fake input events.\nPurpose is on the one hand side to provide testing facilities like XTest on X11.\nBut also to support use case like kdeconnect's mouse pad interface.\n\nA compositor should not trust the input received from this interface.\nClients should not expect that the compositor honors the requests from this\ninterface.\n\nWarning! The protocol described in this file is a desktop environment\nimplementation detail. Regular clients must not use this protocol.\nBackward incompatible changes may be added without bumping the major\nversion of the extension.",
        "summary": "Fake input manager"
      },
      "requests": [
        {
          "type": "request",
          "name": "authenticate",
          "description": {
            "type": "description",
            "text": "A client should use this request to tell the compositor why it wants to\nuse this interface. The compositor might use the information to decide\nwhether it wants to grant the request. The data might also be passed to\nthe user to decide whether the application should get granted access to\nthis very privileged interface.",
            "summary": "Information why the client wants to use the interface"
          },
          "args": [
            {
              "type": "arg",
              "name": "application",
              "argType": "string",
              "summary": "user visible name of the application"
            },
            {
              "type": "arg",
              "name": "reason",
              "argType": "string",
              "summary": "reason why the application wants to use this interface"
            }
          ]
        },
        {
          "type": "request",
          "name": "pointer_motion",
          "args": [
            {
              "type": "arg",
              "name": "delta_x",
              "argType": "fixed"
            },
            {
              "type": "arg",
              "name": "delta_y",
              "argType": "fixed"
            }
          ]
        },
        {
          "type": "request",
          "name": "button",
          "args": [
            {
              "type": "arg",
              "name": "button",
              "argType": "uint"
            },
            {
              "type": "arg",
              "name": "state",
              "argType": "uint"
            }
          ]
        },
        {
          "type": "request",
          "name": "axis",
          "args": [
            {
              "type": "arg",
              "name": "axis",
              "argType": "uint"
            },
            {
              "type": "arg",
              "name": "value",
              "argType": "fixed"
            }
          ]
        },
        {
          "type": "request",
          "name": "touch_down",
          "since": "2",
          "description": {
            "type": "description",
            "text": "A client should use this request to send touch down event at specific\ncoordinates.",
            "summary": "touch down event"
          },
          "args": [
            {
              "type": "arg",
              "name": "id",
              "argType": "uint",
              "summary": "unique id for touch down event"
            },
            {
              "type": "arg",
              "name": "x",
              "argType": "fixed",
              "summary": "x coordinate for touch down event"
            },
            {
              "type": "arg",
              "name": "y",
              "argType": "fixed",
              "summary": "y coordinate for touch down event"
            }
          ]
        },
        {
          "type": "request",
          "name": "touch_motion",
          "since": "2",
          "description": {
            "type": "description",
            "text": "A client should use this request to send touch motion to specific position.",
            "summary": "touch motion event"
          },
          "args": [
            {
              "type": "arg",
              "name": "id",
              "argType": "uint",
              "summary": "unique id for touch motion event"
            },
            {
              "type": "arg",
              "name": "x",
              "argType": "fixed",
              "summary": "x coordinate for touch motion event"
            },
            {
              "type": "arg",
              "name": "y",
              "argType": "fixed",
              "summary": "y coordinate for touch motion event"
            }
          ]
        },
        {
          "type": "request",
          "name": "touch_up",
          "since": "2",
          "description": {
            "type": "description",
            "text": "A client should use this request to send touch up event.",
            "summary": "touch up event"
          },
          "args": [
            {
              "type": "arg",
              "name": "id",
              "argType": "uint",
              "summary": "unique id for touch up event"
            }
          ]
        },
        {
          "type": "request",
          "name": "touch_cancel",
          "since": "2",
          "description": {
            "type": "description",
            "text": "A client should use this request to cancel the current\ntouch event.",
            "summary": "touch cancel event"
          },
          "args": []
        },
        {
          "type": "request",
          "name": "touch_frame",
          "since": "2",
          "description": {
            "type": "description",
            "text": "A client should use this request to send touch frame event.",
            "summary": "touch frame event"
          },
          "args": []
        },
        {
          "type": "request",
          "name": "pointer_motion_absolute",
          "since": "3",
          "args": [
            {
              "type": "arg",
              "name": "x",
              "argType": "fixed"
            },
            {
              "type": "arg",
              "name": "y",
              "argType": "fixed"
            }
          ]
        },
        {
          "type": "request",
          "name": "keyboard_key",
          "since": "4",
          "args": [
            {
              "type": "arg",
              "name": "button",
              "argType": "uint"
            },
            {
              "type": "arg",
              "name": "state",
              "argType": "uint"
            }
          ]
        },
        {
          "type": "request",
          "name": "destroy",
          "requestType": "destructor",
          "since": "5",
          "description": {
            "type": "description",
            "summary": "Destroy the fake input device"
          },
          "args": []
        }
      ],
      "events": [],
      "enums": []
    }
  ]
}
