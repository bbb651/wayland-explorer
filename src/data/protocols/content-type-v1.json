{
  "type": "protocol",
  "name": "content_type_v1",
  "copyright": {
    "type": "copyright",
    "text": "Copyright © 2021 Emmanuel Gil Peyrot\nCopyright © 2022 Xaver Hugl\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the \"Software\"),\nto deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice (including the next\nparagraph) shall be included in all copies or substantial portions of the\nSoftware.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\nTHE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE."
  },
  "interfaces": [
    {
      "type": "interface",
      "name": "wp_content_type_manager_v1",
      "version": "1",
      "description": {
        "type": "description",
        "text": "This interface allows a client to describe the kind of content a surface\nwill display, to allow the compositor to optimize its behavior for it.\n\nWarning! The protocol described in this file is currently in the testing\nphase. Backward compatible changes may be added together with the\ncorresponding interface version bump. Backward incompatible changes can\nonly be done by creating a new major version of the extension.",
        "summary": "surface content type manager"
      },
      "requests": [
        {
          "type": "request",
          "name": "destroy",
          "requestType": "destructor",
          "description": {
            "type": "description",
            "text": "Destroy the content type manager. This doesn't destroy objects created\nwith the manager.",
            "summary": "destroy the content type manager object"
          },
          "args": []
        },
        {
          "type": "request",
          "name": "get_surface_content_type",
          "description": {
            "type": "description",
            "text": "Create a new content type object associated with the given surface.\n\nCreating a wp_content_type_v1 from a wl_surface which already has one\nattached is a client error: already_constructed.",
            "summary": "create a new toplevel decoration object"
          },
          "args": [
            {
              "type": "arg",
              "name": "id",
              "argType": "new_id",
              "interface": "wp_content_type_v1"
            },
            {
              "type": "arg",
              "name": "surface",
              "argType": "object",
              "interface": "wl_surface",
              "protocol": "wayland"
            }
          ]
        }
      ],
      "events": [],
      "enums": [
        {
          "type": "enum",
          "name": "error",
          "bitfield": false,
          "entries": [
            {
              "type": "entry",
              "name": "already_constructed",
              "value": "0",
              "summary": "wl_surface already has a content type object"
            }
          ]
        }
      ]
    },
    {
      "type": "interface",
      "name": "wp_content_type_v1",
      "version": "1",
      "description": {
        "type": "description",
        "text": "The content type object allows the compositor to optimize for the kind\nof content shown on the surface. A compositor may for example use it to\nset relevant drm properties like \"content type\".\n\nThe client may request to switch to another content type at any time.\nWhen the associated surface gets destroyed, this object becomes inert and\nthe client should destroy it.",
        "summary": "content type object for a surface"
      },
      "requests": [
        {
          "type": "request",
          "name": "destroy",
          "requestType": "destructor",
          "description": {
            "type": "description",
            "text": "Switch back to not specifying the content type of this surface. This is\nequivalent to setting the content type to none, including double\nbuffering semantics. See set_content_type for details.",
            "summary": "destroy the content type object"
          },
          "args": []
        },
        {
          "type": "request",
          "name": "set_content_type",
          "description": {
            "type": "description",
            "text": "Set the surface content type. This informs the compositor that the\nclient believes it is displaying buffers matching this content type.\n\nThis is purely a hint for the compositor, which can be used to adjust\nits behavior or hardware settings to fit the presented content best.\n\nThe content type is double-buffered state, see wl_surface.commit for\ndetails.",
            "summary": "specify the content type"
          },
          "args": [
            {
              "type": "arg",
              "name": "content_type",
              "argType": "uint",
              "summary": "the content type",
              "enum": "type"
            }
          ]
        }
      ],
      "events": [],
      "enums": [
        {
          "type": "enum",
          "name": "type",
          "bitfield": false,
          "description": {
            "type": "description",
            "text": "These values describe the available content types for a surface.",
            "summary": "possible content types"
          },
          "entries": [
            {
              "type": "entry",
              "name": "none",
              "value": "0",
              "description": {
                "type": "description",
                "text": "The content type none means that either the application has no data\nabout the content type, or that the content doesn't fit into one of\nthe other categories.",
                "summary": "no content type applies"
              }
            },
            {
              "type": "entry",
              "name": "photo",
              "value": "1",
              "description": {
                "type": "description",
                "text": "The content type photo describes content derived from digital still\npictures and may be presented with minimal processing.",
                "summary": "photo content type"
              }
            },
            {
              "type": "entry",
              "name": "video",
              "value": "2",
              "description": {
                "type": "description",
                "text": "The content type video describes a video or animation and may be\npresented with more accurate timing to avoid stutter. Where scaling\nis needed, scaling methods more appropriate for video may be used.",
                "summary": "video content type"
              }
            },
            {
              "type": "entry",
              "name": "game",
              "value": "3",
              "description": {
                "type": "description",
                "text": "The content type game describes a running game. Its content may be\npresented with reduced latency.",
                "summary": "game content type"
              }
            }
          ]
        }
      ]
    }
  ]
}
