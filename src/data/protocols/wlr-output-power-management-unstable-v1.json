{
  "type": "protocol",
  "name": "wlr_output_power_management_unstable_v1",
  "copyright": {
    "type": "copyright",
    "text": "Copyright Â© 2019 Purism SPC\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the \"Software\"),\nto deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice (including the next\nparagraph) shall be included in all copies or substantial portions of the\nSoftware.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\nTHE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE."
  },
  "description": {
    "type": "description",
    "text": "This protocol allows clients to control power management modes\nof outputs that are currently part of the compositor space. The\nintent is to allow special clients like desktop shells to power\ndown outputs when the system is idle.\n\nTo modify outputs not currently part of the compositor space see\nwlr-output-management.\n\nWarning! The protocol described in this file is experimental and\nbackward incompatible changes may be made. Backward compatible changes\nmay be added together with the corresponding interface version bump.\nBackward incompatible changes are done by bumping the version number in\nthe protocol and interface names and resetting the interface version.\nOnce the protocol is to be declared stable, the 'z' prefix and the\nversion number in the protocol and interface names are removed and the\ninterface version number is reset.",
    "summary": "Control power management modes of outputs"
  },
  "interfaces": [
    {
      "type": "interface",
      "name": "zwlr_output_power_manager_v1",
      "version": "1",
      "description": {
        "type": "description",
        "text": "This interface is a manager that allows creating per-output power\nmanagement mode controls.",
        "summary": "manager to create per-output power management"
      },
      "requests": [
        {
          "type": "request",
          "name": "get_output_power",
          "description": {
            "type": "description",
            "text": "Create an output power management mode control that can be used to\nadjust the power management mode for a given output.",
            "summary": "get a power management for an output"
          },
          "args": [
            {
              "type": "arg",
              "name": "id",
              "argType": "new_id",
              "interface": "zwlr_output_power_v1"
            },
            {
              "type": "arg",
              "name": "output",
              "argType": "object",
              "interface": "wl_output",
              "protocol": "wayland"
            }
          ]
        },
        {
          "type": "request",
          "name": "destroy",
          "requestType": "destructor",
          "description": {
            "type": "description",
            "text": "All objects created by the manager will still remain valid, until their\nappropriate destroy request has been called.",
            "summary": "destroy the manager"
          },
          "args": []
        }
      ],
      "events": [],
      "enums": []
    },
    {
      "type": "interface",
      "name": "zwlr_output_power_v1",
      "version": "1",
      "description": {
        "type": "description",
        "text": "This object offers requests to set the power management mode of\nan output.",
        "summary": "adjust power management mode for an output"
      },
      "requests": [
        {
          "type": "request",
          "name": "set_mode",
          "description": {
            "type": "description",
            "text": "Set an output's power save mode to the given mode. The mode change\nis effective immediately. If the output does not support the given\nmode a failed event is sent.",
            "summary": "Set an outputs power save mode"
          },
          "args": [
            {
              "type": "arg",
              "name": "mode",
              "argType": "uint",
              "summary": "the power save mode to set",
              "enum": "mode"
            }
          ]
        },
        {
          "type": "request",
          "name": "destroy",
          "requestType": "destructor",
          "description": {
            "type": "description",
            "text": "Destroys the output power management mode control object.",
            "summary": "destroy this power management"
          },
          "args": []
        }
      ],
      "events": [
        {
          "type": "event",
          "name": "mode",
          "description": {
            "type": "description",
            "text": "Report the power management mode change of an output.\n\nThe mode event is sent after an output changed its power\nmanagement mode. The reason can be a client using set_mode or the\ncompositor deciding to change an output's mode.\nThis event is also sent immediately when the object is created\nso the client is informed about the current power management mode.",
            "summary": "Report a power management mode change"
          },
          "args": [
            {
              "type": "arg",
              "name": "mode",
              "argType": "uint",
              "summary": "the output's new power management mode",
              "enum": "mode"
            }
          ]
        },
        {
          "type": "event",
          "name": "failed",
          "description": {
            "type": "description",
            "text": "This event indicates that the output power management mode control\nis no longer valid. This can happen for a number of reasons,\nincluding:\n- The output doesn't support power management\n- Another client already has exclusive power management mode control\nfor this output\n- The output disappeared\n\nUpon receiving this event, the client should destroy this object.",
            "summary": "object no longer valid"
          },
          "args": []
        }
      ],
      "enums": [
        {
          "type": "enum",
          "name": "mode",
          "bitfield": false,
          "entries": [
            {
              "type": "entry",
              "name": "off",
              "value": "0",
              "summary": "Output is turned off."
            },
            {
              "type": "entry",
              "name": "on",
              "value": "1",
              "summary": "Output is turned on, no power saving"
            }
          ]
        },
        {
          "type": "enum",
          "name": "error",
          "bitfield": false,
          "entries": [
            {
              "type": "entry",
              "name": "invalid_mode",
              "value": "1",
              "summary": "nonexistent power save mode"
            }
          ]
        }
      ]
    }
  ]
}
