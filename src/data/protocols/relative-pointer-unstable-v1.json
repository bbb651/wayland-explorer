{
  "type": "protocol",
  "name": "relative_pointer_unstable_v1",
  "copyright": {
    "type": "copyright",
    "text": "Copyright © 2014      Jonas Ådahl\nCopyright © 2015      Red Hat Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the \"Software\"),\nto deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice (including the next\nparagraph) shall be included in all copies or substantial portions of the\nSoftware.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\nTHE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE."
  },
  "description": {
    "type": "description",
    "text": "This protocol specifies a set of interfaces used for making clients able to\nreceive relative pointer events not obstructed by barriers (such as the\nmonitor edge or other pointer barriers).\n\nTo start receiving relative pointer events, a client must first bind the\nglobal interface \"wp_relative_pointer_manager\" which, if a compositor\nsupports relative pointer motion events, is exposed by the registry. After\nhaving created the relative pointer manager proxy object, the client uses\nit to create the actual relative pointer object using the\n\"get_relative_pointer\" request given a wl_pointer. The relative pointer\nmotion events will then, when applicable, be transmitted via the proxy of\nthe newly created relative pointer object. See the documentation of the\nrelative pointer interface for more details.\n\nWarning! The protocol described in this file is experimental and backward\nincompatible changes may be made. Backward compatible changes may be added\ntogether with the corresponding interface version bump. Backward\nincompatible changes are done by bumping the version number in the protocol\nand interface names and resetting the interface version. Once the protocol\nis to be declared stable, the 'z' prefix and the version number in the\nprotocol and interface names are removed and the interface version number is\nreset.",
    "summary": "protocol for relative pointer motion events"
  },
  "interfaces": [
    {
      "type": "interface",
      "name": "zwp_relative_pointer_manager_v1",
      "version": "1",
      "description": {
        "type": "description",
        "text": "A global interface used for getting the relative pointer object for a\ngiven pointer.",
        "summary": "get relative pointer objects"
      },
      "requests": [
        {
          "type": "request",
          "name": "destroy",
          "requestType": "destructor",
          "description": {
            "type": "description",
            "text": "Used by the client to notify the server that it will no longer use this\nrelative pointer manager object.",
            "summary": "destroy the relative pointer manager object"
          },
          "args": []
        },
        {
          "type": "request",
          "name": "get_relative_pointer",
          "description": {
            "type": "description",
            "text": "Create a relative pointer interface given a wl_pointer object. See the\nwp_relative_pointer interface for more details.",
            "summary": "get a relative pointer object"
          },
          "args": [
            {
              "type": "arg",
              "name": "id",
              "argType": "new_id",
              "interface": "zwp_relative_pointer_v1"
            },
            {
              "type": "arg",
              "name": "pointer",
              "argType": "object",
              "interface": "wl_pointer",
              "protocol": "wayland"
            }
          ]
        }
      ],
      "events": [],
      "enums": []
    },
    {
      "type": "interface",
      "name": "zwp_relative_pointer_v1",
      "version": "1",
      "description": {
        "type": "description",
        "text": "A wp_relative_pointer object is an extension to the wl_pointer interface\nused for emitting relative pointer events. It shares the same focus as\nwl_pointer objects of the same seat and will only emit events when it has\nfocus.",
        "summary": "relative pointer object"
      },
      "requests": [
        {
          "type": "request",
          "name": "destroy",
          "requestType": "destructor",
          "description": {
            "type": "description",
            "summary": "release the relative pointer object"
          },
          "args": []
        }
      ],
      "events": [
        {
          "type": "event",
          "name": "relative_motion",
          "description": {
            "type": "description",
            "text": "Relative x/y pointer motion from the pointer of the seat associated with\nthis object.\n\nA relative motion is in the same dimension as regular wl_pointer motion\nevents, except they do not represent an absolute position. For example,\nmoving a pointer from (x, y) to (x', y') would have the equivalent\nrelative motion (x' - x, y' - y). If a pointer motion caused the\nabsolute pointer position to be clipped by for example the edge of the\nmonitor, the relative motion is unaffected by the clipping and will\nrepresent the unclipped motion.\n\nThis event also contains non-accelerated motion deltas. The\nnon-accelerated delta is, when applicable, the regular pointer motion\ndelta as it was before having applied motion acceleration and other\ntransformations such as normalization.\n\nNote that the non-accelerated delta does not represent 'raw' events as\nthey were read from some device. Pointer motion acceleration is device-\nand configuration-specific and non-accelerated deltas and accelerated\ndeltas may have the same value on some devices.\n\nRelative motions are not coupled to wl_pointer.motion events, and can be\nsent in combination with such events, but also independently. There may\nalso be scenarios where wl_pointer.motion is sent, but there is no\nrelative motion. The order of an absolute and relative motion event\noriginating from the same physical motion is not guaranteed.\n\nIf the client needs button events or focus state, it can receive them\nfrom a wl_pointer object of the same seat that the wp_relative_pointer\nobject is associated with.",
            "summary": "relative pointer motion"
          },
          "args": [
            {
              "type": "arg",
              "name": "utime_hi",
              "argType": "uint",
              "summary": "high 32 bits of a 64 bit timestamp with microsecond granularity"
            },
            {
              "type": "arg",
              "name": "utime_lo",
              "argType": "uint",
              "summary": "low 32 bits of a 64 bit timestamp with microsecond granularity"
            },
            {
              "type": "arg",
              "name": "dx",
              "argType": "fixed",
              "summary": "the x component of the motion vector"
            },
            {
              "type": "arg",
              "name": "dy",
              "argType": "fixed",
              "summary": "the y component of the motion vector"
            },
            {
              "type": "arg",
              "name": "dx_unaccel",
              "argType": "fixed",
              "summary": "the x component of the unaccelerated motion vector"
            },
            {
              "type": "arg",
              "name": "dy_unaccel",
              "argType": "fixed",
              "summary": "the y component of the unaccelerated motion vector"
            }
          ]
        }
      ],
      "enums": []
    }
  ]
}
