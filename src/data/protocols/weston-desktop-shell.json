{
  "type": "protocol",
  "name": "weston_desktop",
  "interfaces": [
    {
      "type": "interface",
      "name": "weston_desktop_shell",
      "version": "1",
      "description": {
        "type": "description",
        "text": "Traditional user interfaces can rely on this interface to define the\nfoundations of typical desktops. Currently it's possible to set up\nbackground, panels and locking surfaces.",
        "summary": "create desktop widgets and helpers"
      },
      "requests": [
        {
          "type": "request",
          "name": "set_background",
          "args": [
            {
              "type": "arg",
              "name": "output",
              "argType": "object",
              "interface": "wl_output",
              "protocol": "wayland"
            },
            {
              "type": "arg",
              "name": "surface",
              "argType": "object",
              "interface": "wl_surface",
              "protocol": "wayland"
            }
          ]
        },
        {
          "type": "request",
          "name": "set_panel",
          "args": [
            {
              "type": "arg",
              "name": "output",
              "argType": "object",
              "interface": "wl_output",
              "protocol": "wayland"
            },
            {
              "type": "arg",
              "name": "surface",
              "argType": "object",
              "interface": "wl_surface",
              "protocol": "wayland"
            }
          ]
        },
        {
          "type": "request",
          "name": "set_lock_surface",
          "args": [
            {
              "type": "arg",
              "name": "surface",
              "argType": "object",
              "interface": "wl_surface",
              "protocol": "wayland"
            }
          ]
        },
        {
          "type": "request",
          "name": "unlock",
          "args": []
        },
        {
          "type": "request",
          "name": "set_grab_surface",
          "description": {
            "type": "description",
            "text": "The surface set by this request will receive a fake\npointer.enter event during grabs at position 0, 0 and is\nexpected to set an appropriate cursor image as described by\nthe grab_cursor event sent just before the enter event.",
            "summary": "set grab surface"
          },
          "args": [
            {
              "type": "arg",
              "name": "surface",
              "argType": "object",
              "interface": "wl_surface",
              "protocol": "wayland"
            }
          ]
        },
        {
          "type": "request",
          "name": "desktop_ready",
          "description": {
            "type": "description",
            "text": "Tell the server, that enough desktop elements have been drawn\nto make the desktop look ready for use. During start-up, the\nserver can wait for this request with a black screen before\nstarting to fade in the desktop, for instance. If the client\nparts of a desktop take a long time to initialize, we avoid\nshowing temporary garbage.",
            "summary": "desktop is ready to be shown"
          },
          "args": []
        },
        {
          "type": "request",
          "name": "set_panel_position",
          "description": {
            "type": "description",
            "text": "Tell the shell which side of the screen the panel is\nlocated. This is so that new windows do not overlap the panel\nand maximized windows maximize properly.",
            "summary": "set panel position"
          },
          "args": [
            {
              "type": "arg",
              "name": "position",
              "argType": "uint"
            }
          ]
        }
      ],
      "events": [
        {
          "type": "event",
          "name": "configure",
          "args": [
            {
              "type": "arg",
              "name": "edges",
              "argType": "uint"
            },
            {
              "type": "arg",
              "name": "surface",
              "argType": "object",
              "interface": "wl_surface",
              "protocol": "wayland"
            },
            {
              "type": "arg",
              "name": "width",
              "argType": "int"
            },
            {
              "type": "arg",
              "name": "height",
              "argType": "int"
            }
          ]
        },
        {
          "type": "event",
          "name": "prepare_lock_surface",
          "description": {
            "type": "description",
            "text": "Tell the client we want it to create and set the lock surface, which is\na GUI asking the user to unlock the screen. The lock surface is\nannounced with 'set_lock_surface'. Whether or not the client actually\nimplements locking, it MUST send 'unlock' request to let the normal\ndesktop resume.",
            "summary": "tell the client to create, set the lock surface"
          },
          "args": []
        },
        {
          "type": "event",
          "name": "grab_cursor",
          "description": {
            "type": "description",
            "text": "This event will be sent immediately before a fake enter event on the\ngrab surface.",
            "summary": "tell client what cursor to show during a grab"
          },
          "args": [
            {
              "type": "arg",
              "name": "cursor",
              "argType": "uint"
            }
          ]
        }
      ],
      "enums": [
        {
          "type": "enum",
          "name": "cursor",
          "bitfield": false,
          "entries": [
            {
              "type": "entry",
              "name": "none",
              "value": "0"
            },
            {
              "type": "entry",
              "name": "resize_top",
              "value": "1"
            },
            {
              "type": "entry",
              "name": "resize_bottom",
              "value": "2"
            },
            {
              "type": "entry",
              "name": "arrow",
              "value": "3"
            },
            {
              "type": "entry",
              "name": "resize_left",
              "value": "4"
            },
            {
              "type": "entry",
              "name": "resize_top_left",
              "value": "5"
            },
            {
              "type": "entry",
              "name": "resize_bottom_left",
              "value": "6"
            },
            {
              "type": "entry",
              "name": "move",
              "value": "7"
            },
            {
              "type": "entry",
              "name": "resize_right",
              "value": "8"
            },
            {
              "type": "entry",
              "name": "resize_top_right",
              "value": "9"
            },
            {
              "type": "entry",
              "name": "resize_bottom_right",
              "value": "10"
            },
            {
              "type": "entry",
              "name": "busy",
              "value": "11"
            }
          ]
        },
        {
          "type": "enum",
          "name": "panel_position",
          "bitfield": false,
          "entries": [
            {
              "type": "entry",
              "name": "top",
              "value": "0"
            },
            {
              "type": "entry",
              "name": "bottom",
              "value": "1"
            },
            {
              "type": "entry",
              "name": "left",
              "value": "2"
            },
            {
              "type": "entry",
              "name": "right",
              "value": "3"
            }
          ]
        },
        {
          "type": "enum",
          "name": "error",
          "bitfield": false,
          "entries": [
            {
              "type": "entry",
              "name": "invalid_argument",
              "value": "0",
              "summary": "an invalid argument was provided in a request"
            }
          ]
        }
      ]
    },
    {
      "type": "interface",
      "name": "weston_screensaver",
      "version": "1",
      "description": {
        "type": "description",
        "text": "Only one client can bind this interface at a time.",
        "summary": "interface for implementing screensavers"
      },
      "requests": [
        {
          "type": "request",
          "name": "set_surface",
          "description": {
            "type": "description",
            "text": "A screensaver surface is normally hidden, and only visible after an\nidle timeout.",
            "summary": "set the surface type as a screensaver"
          },
          "args": [
            {
              "type": "arg",
              "name": "surface",
              "argType": "object",
              "interface": "wl_surface",
              "protocol": "wayland"
            },
            {
              "type": "arg",
              "name": "output",
              "argType": "object",
              "interface": "wl_output",
              "protocol": "wayland"
            }
          ]
        }
      ],
      "events": [],
      "enums": []
    }
  ]
}
