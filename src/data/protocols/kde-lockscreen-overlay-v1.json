{
  "type": "protocol",
  "name": "kde_lockscreen_overlay_v1",
  "copyright": {
    "type": "copyright",
    "text": "\nSPDX-FileCopyrightText: 2022 Aleix Pol Gonzalez <aleixpol@kde.org>\n\nSPDX-License-Identifier: LGPL-2.1-or-later\n"
  },
  "interfaces": [
    {
      "type": "interface",
      "name": "kde_lockscreen_overlay_v1",
      "version": "1",
      "description": {
        "type": "description",
        "text": "Allows a client to request a surface to be visible when the system is locked.\n\nThis is meant to be used for specific high urgency cases like phone calls or alarms.\n\nWarning! The protocol described in this file is a desktop environment\nimplementation detail. Regular clients must not use this protocol.\nBackward incompatible changes may be added without bumping the major\nversion of the extension.",
        "summary": "Allow surfaces over the lockscreen"
      },
      "requests": [
        {
          "type": "request",
          "name": "allow",
          "description": {
            "type": "description",
            "text": "Informs the compositor that the surface could be shown when the screen is locked. This request should be called while the surface is unmapped.",
            "summary": "Tell about which surface could be raised above the lockscreen"
          },
          "args": [
            {
              "type": "arg",
              "name": "surface",
              "argType": "object",
              "interface": "wl_surface",
              "protocol": "wayland"
            }
          ]
        },
        {
          "type": "request",
          "name": "destroy",
          "requestType": "destructor",
          "description": {
            "type": "description",
            "text": "This won't affect the surface previously marked with the allow request.",
            "summary": "Destroy the kde_lockscreen_overlay_v1"
          },
          "args": []
        }
      ],
      "events": [],
      "enums": [
        {
          "type": "enum",
          "name": "error",
          "bitfield": false,
          "entries": [
            {
              "type": "entry",
              "name": "invalid_surface_state",
              "value": "0",
              "summary": "the client provided an invalid surface state"
            }
          ]
        }
      ]
    }
  ]
}
