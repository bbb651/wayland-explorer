{
  "type": "protocol",
  "name": "xdg_activation_v1",
  "copyright": {
    "type": "copyright",
    "text": "Copyright © 2020 Aleix Pol Gonzalez <aleixpol@kde.org>\nCopyright © 2020 Carlos Garnacho <carlosg@gnome.org>\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the \"Software\"),\nto deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice (including the next\nparagraph) shall be included in all copies or substantial portions of the\nSoftware.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\nTHE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE."
  },
  "description": {
    "type": "description",
    "text": "The way for a client to pass focus to another toplevel is as follows.\n\nThe client that intends to activate another toplevel uses the\nxdg_activation_v1.get_activation_token request to get an activation token.\nThis token is then forwarded to the client, which is supposed to activate\none of its surfaces, through a separate band of communication.\n\nOne established way of doing this is through the XDG_ACTIVATION_TOKEN\nenvironment variable of a newly launched child process. The child process\nshould unset the environment variable again right after reading it out in\norder to avoid propagating it to other child processes.\n\nAnother established way exists for Applications implementing the D-Bus\ninterface org.freedesktop.Application, which should get their token under\nactivation-token on their platform_data.\n\nIn general activation tokens may be transferred across clients through\nmeans not described in this protocol.\n\nThe client to be activated will then pass the token\nit received to the xdg_activation_v1.activate request. The compositor can\nthen use this token to decide how to react to the activation request.\n\nThe token the activating client gets may be ineffective either already at\nthe time it receives it, for example if it was not focused, for focus\nstealing prevention. The activating client will have no way to discover\nthe validity of the token, and may still forward it to the to be activated\nclient.\n\nThe created activation token may optionally get information attached to it\nthat can be used by the compositor to identify the application that we\nintend to activate. This can for example be used to display a visual hint\nabout what application is being started.\n\nWarning! The protocol described in this file is currently in the testing\nphase. Backward compatible changes may be added together with the\ncorresponding interface version bump. Backward incompatible changes can\nonly be done by creating a new major version of the extension.",
    "summary": "Protocol for requesting activation of surfaces"
  },
  "interfaces": [
    {
      "type": "interface",
      "name": "xdg_activation_v1",
      "version": "1",
      "description": {
        "type": "description",
        "text": "A global interface used for informing the compositor about applications\nbeing activated or started, or for applications to request to be\nactivated.",
        "summary": "interface for activating surfaces"
      },
      "requests": [
        {
          "type": "request",
          "name": "destroy",
          "requestType": "destructor",
          "description": {
            "type": "description",
            "text": "Notify the compositor that the xdg_activation object will no longer be\nused.\n\nThe child objects created via this interface are unaffected and should\nbe destroyed separately.",
            "summary": "destroy the xdg_activation object"
          },
          "args": []
        },
        {
          "type": "request",
          "name": "get_activation_token",
          "description": {
            "type": "description",
            "text": "Creates an xdg_activation_token_v1 object that will provide\nthe initiating client with a unique token for this activation. This\ntoken should be offered to the clients to be activated.",
            "summary": "requests a token"
          },
          "args": [
            {
              "type": "arg",
              "name": "id",
              "argType": "new_id",
              "interface": "xdg_activation_token_v1"
            }
          ]
        },
        {
          "type": "request",
          "name": "activate",
          "description": {
            "type": "description",
            "text": "Requests surface activation. It's up to the compositor to display\nthis information as desired, for example by placing the surface above\nthe rest.\n\nThe compositor may know who requested this by checking the activation\ntoken and might decide not to follow through with the activation if it's\nconsidered unwanted.\n\nCompositors can ignore unknown activation tokens when an invalid\ntoken is passed.",
            "summary": "notify new interaction being available"
          },
          "args": [
            {
              "type": "arg",
              "name": "token",
              "argType": "string",
              "summary": "the activation token of the initiating client"
            },
            {
              "type": "arg",
              "name": "surface",
              "argType": "object",
              "summary": "the wl_surface to activate",
              "interface": "wl_surface",
              "protocol": "wayland"
            }
          ]
        }
      ],
      "events": [],
      "enums": []
    },
    {
      "type": "interface",
      "name": "xdg_activation_token_v1",
      "version": "1",
      "description": {
        "type": "description",
        "text": "An object for setting up a token and receiving a token handle that can\nbe passed as an activation token to another client.\n\nThe object is created using the xdg_activation_v1.get_activation_token\nrequest. This object should then be populated with the app_id, surface\nand serial information and committed. The compositor shall then issue a\ndone event with the token. In case the request's parameters are invalid,\nthe compositor will provide an invalid token.",
        "summary": "an exported activation handle"
      },
      "requests": [
        {
          "type": "request",
          "name": "set_serial",
          "description": {
            "type": "description",
            "text": "Provides information about the seat and serial event that requested the\ntoken.\n\nThe serial can come from an input or focus event. For instance, if a\nclick triggers the launch of a third-party client, the launcher client\nshould send a set_serial request with the serial and seat from the\nwl_pointer.button event.\n\nSome compositors might refuse to activate toplevels when the token\ndoesn't have a valid and recent enough event serial.\n\nMust be sent before commit. This information is optional.",
            "summary": "specifies the seat and serial of the activating event"
          },
          "args": [
            {
              "type": "arg",
              "name": "serial",
              "argType": "uint",
              "summary": "the serial of the event that triggered the activation"
            },
            {
              "type": "arg",
              "name": "seat",
              "argType": "object",
              "summary": "the wl_seat of the event",
              "interface": "wl_seat",
              "protocol": "wayland"
            }
          ]
        },
        {
          "type": "request",
          "name": "set_app_id",
          "description": {
            "type": "description",
            "text": "The requesting client can specify an app_id to associate the token\nbeing created with it.\n\nMust be sent before commit. This information is optional.",
            "summary": "specifies the application being activated"
          },
          "args": [
            {
              "type": "arg",
              "name": "app_id",
              "argType": "string",
              "summary": "the application id of the client being activated."
            }
          ]
        },
        {
          "type": "request",
          "name": "set_surface",
          "description": {
            "type": "description",
            "text": "This request sets the surface requesting the activation. Note, this is\ndifferent from the surface that will be activated.\n\nSome compositors might refuse to activate toplevels when the token\ndoesn't have a requesting surface.\n\nMust be sent before commit. This information is optional.",
            "summary": "specifies the surface requesting activation"
          },
          "args": [
            {
              "type": "arg",
              "name": "surface",
              "argType": "object",
              "summary": "the requesting surface",
              "interface": "wl_surface",
              "protocol": "wayland"
            }
          ]
        },
        {
          "type": "request",
          "name": "commit",
          "description": {
            "type": "description",
            "text": "Requests an activation token based on the different parameters that\nhave been offered through set_serial, set_surface and set_app_id.",
            "summary": "issues the token request"
          },
          "args": []
        },
        {
          "type": "request",
          "name": "destroy",
          "requestType": "destructor",
          "description": {
            "type": "description",
            "text": "Notify the compositor that the xdg_activation_token_v1 object will no\nlonger be used. The received token stays valid.",
            "summary": "destroy the xdg_activation_token_v1 object"
          },
          "args": []
        }
      ],
      "events": [
        {
          "type": "event",
          "name": "done",
          "description": {
            "type": "description",
            "text": "The 'done' event contains the unique token of this activation request\nand notifies that the provider is done.",
            "summary": "the exported activation token"
          },
          "args": [
            {
              "type": "arg",
              "name": "token",
              "argType": "string",
              "summary": "the exported activation token"
            }
          ]
        }
      ],
      "enums": [
        {
          "type": "enum",
          "name": "error",
          "bitfield": false,
          "entries": [
            {
              "type": "entry",
              "name": "already_used",
              "value": "0",
              "summary": "The token has already been used previously"
            }
          ]
        }
      ]
    }
  ]
}
